plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'hotil'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    // spring boot starter
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    // DataSource
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.flywaydb:flyway-core'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.5.0'
    runtimeOnly 'org.postgresql:postgresql'

    //FCM
    implementation group: 'com.google.firebase', name: 'firebase-admin', version: '9.3.0'

    // BASE64
    implementation 'commons-codec:commons-codec:1.16.1'

    // templates
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // Monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator' //actuator
    implementation 'org.springframework.boot:spring-boot-starter-logging' //logging
    implementation 'com.github.loki4j:loki-logback-appender:1.5.2' //Loki
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus' //prometheus
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // Event Broker
    implementation 'org.springframework.kafka:spring-kafka'

    // Web Socket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // Guava
    implementation group: 'com.google.guava', name: 'guava', version: '33.2.1-jre'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //docs
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.springframework.security:spring-security-test'

    //test db
    implementation 'org.postgresql:postgresql:42.3.8'

    //WebSocket & STOMP
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // fixture monkey
    testImplementation 'com.navercorp.fixturemonkey:fixture-monkey-starter:1.0.14'
    testImplementation 'com.navercorp.fixturemonkey:fixture-monkey-jakarta-validation:1.0.14'

    // AWS
    implementation platform('software.amazon.awssdk:bom:2.21.1')
    implementation 'software.amazon.awssdk:s3'
    implementation 'software.amazon.awssdk:sso'
    implementation 'software.amazon.awssdk:ssooidc'

    // Jakarta Bean Validation API
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    // Hibernate Validator (reference implementation for Jakarta Bean Validation)
    implementation 'org.hibernate.validator:hibernate-validator:7.0.4.Final'

    // Required dependencies for Hibernate Validator
    implementation 'org.glassfish:jakarta.el:4.0.2'

    // testContainer
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.3'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:testcontainers'

}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}